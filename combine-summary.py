#!/usr/bin/python3

from argparse import ArgumentParser
import sys
import json
import mime_counter

Hosts = dict()

def print_to_stderr(*a):
    print(*a, file = sys.stderr)

def addFile(args, filename):
    f = open(filename, 'r', errors="ignore")
    for line in f:
        p = line.find(" {\"")
        host = line[0:p]
        entry = json.loads(line[p+1:])
        if not host in Hosts:
            Hosts[host] = dict()
        for year, values in entry.items():
            varr = mime_counter.from_dict(values)
            if args.yearly:
                year = year[0:4]
            if year in Hosts[host]:
                Hosts[host][year] += varr
            else:
                Hosts[host][year] = varr

def outputResults():
    dict_items = Hosts.items()
    sorted_items = sorted(dict_items)
    for lvl2, entry in sorted_items:
        r = {}
        for year, values in entry.items():
            r[year] = mime_counter.as_dict(values)
        print(lvl2, json.dumps(r))

def dowork(args):
    for f in args.file:
        try:
            addFile(args, f)
        except Exception as inst:
            print_to_stderr("Error", inst, f)
    outputResults()

parser = ArgumentParser(description='Combine summary files generated by cdx-summary.py')
parser.add_argument('--yearly', action="store_true", help='force output into yearly buckets')
parser.add_argument('file', nargs='*', help='summary file (can be several)')

args = parser.parse_args()
dowork(args)
